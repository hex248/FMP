// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain
#include "UnityCG.cginc"

struct SnowData
{
    float3 position;
    float4 vertexColor;
    float moveAmount;
};

RWStructuredBuffer<SnowData> snowData;

float resolution;
float bottomOutHeight;
float topOutHeight;
float deltaTime;


float rand(float2 co)
{
    return(frac(sin(dot(co.x, float2(12.989, 78.233))) * 43758.5453)) * 1;
}

[numthreads(64, 1, 1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    float xPos = id.x / resolution;

    SnowData snow = snowData[id.x];

    float calculatedY = clamp(snow.position.y + (snow.moveAmount * deltaTime), bottomOutHeight, topOutHeight);

    snow.position = float3(snow.position.x, calculatedY, snow.position.z);

    snowData[id.x] = snow;
}
