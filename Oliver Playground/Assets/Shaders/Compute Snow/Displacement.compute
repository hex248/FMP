// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

struct SnowData
{
    float3 position;
    float4 vertexColor;
    int collided;
};

RWStructuredBuffer<SnowData> snowData;
float resolution;

float3 collidingBoundsMax;
float3 collidingBoundsMin;
float bottomOutHeight;
float topOutHeight;


float rand(float2 co)
{
    return(frac(sin(dot(co.x, float2(12.989, 78.233))) * 43758.5453)) * 1;
}

[numthreads(10,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float xPos = id.x / resolution;

    SnowData snow = snowData[id.x];

    float randomYPos = clamp(snow.position.y - rand(float2(0.1, 0.5)), bottomOutHeight, topOutHeight);
    snow.position = float3(snow.position.x, randomYPos, snow.position.z);

    snowData[id.x] = snow;
}
